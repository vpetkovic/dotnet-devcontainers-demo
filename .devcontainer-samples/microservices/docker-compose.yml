networks:
  app_network: 
    driver: bridge

services:
  app:
    container_name: app
    build: 
      context: .
      # Uncomment the following line to use a specific image from the Microsoft Container Registry.
      # image: mcr.microsoft.com/devcontainers/dotnet:8.0-bookworm
      dockerfile: Dockerfile
      args:
        INSTALL_SQL_TOOLS: "true" # Set to "true" to install SQL tools in the container.

    volumes:
      - ../..:/workspaces:cached

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    network_mode: service:db

    # Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
    user: vscode
    privileged: false  # Prevents excessive permissions

    # Restrict Capabilities & Seccomp to further restrict the container's capabilities.
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:false

    env_file:
      - .env

    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. 
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  webapi:
    image: ghcr.io/vpetkovic/demo-vp-weatherapi:latest
    restart: unless-stopped
    container_name: vp-weatherapi-devcontainer
    ports:
      - 5214:8080
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__WeatherApiDatabase: "Server=db;Database=WeatherDb;User=sa;Password=$MSSQL_SA_PASSWORD;TrustServerCertificate=True;MultipleActiveResultSets=True"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_network

  # Comment the following to run a Redis continaer within docker container using `docker run --name cache -p 6379:6379 -d redis`.
  cache:
    image: redis:alpine
    restart: unless-stopped
    container_name: redis-devcontainer
    ports:
      - 6379:6379
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    restart: unless-stopped
    container_name: mssql-devcontainer
    env_file:
      - .env
    environment:
      SA_PASSWORD: $MSSQL_SA_PASSWORD
      MSSQL_AGENT_ENABLED: True
      ACCEPT_EULA: Y
      MSSQL_PID: Developer
      MSSQL_TCP_PORT: 1433
    healthcheck:
      test: [ "CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P $MSSQL_SA_PASSWORD -Q 'SELECT 1' || exit 1" ]
      interval: 10s
      retries: 10
      start_period: 40s
      timeout: 5s
    networks:
      - app_network

    # Add "forwardPorts": ["db:1433"] to **devcontainer.json** to forward MSSQL locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)
